{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This module we'll be looking at the New York City tree census. This data was provided by a volunteer driven census in 2015, and we'll be accessing it via the socrata API. The main site for the data is [here](https://data.cityofnewyork.us/Environment/2015-Street-Tree-Census-Tree-Data/uvpi-gqnh), and on the upper right hand side you'll be able to see the link to the API.\n",
    "\n",
    "The data is conveniently available in json format, so we should be able to just read it directly in to Pandas:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>address</th>\n",
       "      <th>bbl</th>\n",
       "      <th>bin</th>\n",
       "      <th>block_id</th>\n",
       "      <th>boro_ct</th>\n",
       "      <th>borocode</th>\n",
       "      <th>boroname</th>\n",
       "      <th>brch_light</th>\n",
       "      <th>brch_other</th>\n",
       "      <th>brch_shoe</th>\n",
       "      <th>...</th>\n",
       "      <th>tree_dbh</th>\n",
       "      <th>tree_id</th>\n",
       "      <th>trnk_light</th>\n",
       "      <th>trnk_other</th>\n",
       "      <th>trunk_wire</th>\n",
       "      <th>user_type</th>\n",
       "      <th>x_sp</th>\n",
       "      <th>y_sp</th>\n",
       "      <th>zip_city</th>\n",
       "      <th>zipcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>108-005 70 AVENUE</td>\n",
       "      <td>4.022210e+09</td>\n",
       "      <td>4052307.0</td>\n",
       "      <td>348711</td>\n",
       "      <td>4073900</td>\n",
       "      <td>4</td>\n",
       "      <td>Queens</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>180683</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>TreesCount Staff</td>\n",
       "      <td>1.027431e+06</td>\n",
       "      <td>202756.7687</td>\n",
       "      <td>Forest Hills</td>\n",
       "      <td>11375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>147-074 7 AVENUE</td>\n",
       "      <td>4.044750e+09</td>\n",
       "      <td>4101931.0</td>\n",
       "      <td>315986</td>\n",
       "      <td>4097300</td>\n",
       "      <td>4</td>\n",
       "      <td>Queens</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>200540</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>TreesCount Staff</td>\n",
       "      <td>1.034456e+06</td>\n",
       "      <td>228644.8374</td>\n",
       "      <td>Whitestone</td>\n",
       "      <td>11357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>390 MORGAN AVENUE</td>\n",
       "      <td>3.028870e+09</td>\n",
       "      <td>3338310.0</td>\n",
       "      <td>218365</td>\n",
       "      <td>3044900</td>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>204026</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>1.001823e+06</td>\n",
       "      <td>200716.8913</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>11211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1027 GRAND STREET</td>\n",
       "      <td>3.029250e+09</td>\n",
       "      <td>3338342.0</td>\n",
       "      <td>217969</td>\n",
       "      <td>3044900</td>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>204337</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>1.002420e+06</td>\n",
       "      <td>199244.2531</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>11211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>603 6 STREET</td>\n",
       "      <td>3.010850e+09</td>\n",
       "      <td>3025654.0</td>\n",
       "      <td>223043</td>\n",
       "      <td>3016500</td>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>189565</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>9.909138e+05</td>\n",
       "      <td>182202.4260</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>11215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>8 COLUMBUS AVENUE</td>\n",
       "      <td>1.011310e+09</td>\n",
       "      <td>1076229.0</td>\n",
       "      <td>106099</td>\n",
       "      <td>1014500</td>\n",
       "      <td>1</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>11</td>\n",
       "      <td>190422</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>9.884187e+05</td>\n",
       "      <td>219825.5227</td>\n",
       "      <td>New York</td>\n",
       "      <td>10023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>120 WEST 60 STREET</td>\n",
       "      <td>1.011310e+09</td>\n",
       "      <td>1076229.0</td>\n",
       "      <td>106099</td>\n",
       "      <td>1014500</td>\n",
       "      <td>1</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>11</td>\n",
       "      <td>190426</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>9.883112e+05</td>\n",
       "      <td>219885.2785</td>\n",
       "      <td>New York</td>\n",
       "      <td>10023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>311 WEST 50 STREET</td>\n",
       "      <td>1.010410e+09</td>\n",
       "      <td>1086093.0</td>\n",
       "      <td>103940</td>\n",
       "      <td>1012700</td>\n",
       "      <td>1</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>208649</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>9.877691e+05</td>\n",
       "      <td>217157.8561</td>\n",
       "      <td>New York</td>\n",
       "      <td>10019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>65 JEROME AVENUE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>407443</td>\n",
       "      <td>5006400</td>\n",
       "      <td>5</td>\n",
       "      <td>Staten Island</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>209610</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>TreesCount Staff</td>\n",
       "      <td>9.630732e+05</td>\n",
       "      <td>156635.5542</td>\n",
       "      <td>Staten Island</td>\n",
       "      <td>10305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>638 AVENUE Z</td>\n",
       "      <td>3.072350e+09</td>\n",
       "      <td>3320727.0</td>\n",
       "      <td>207508</td>\n",
       "      <td>3037402</td>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>192755</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>TreesCount Staff</td>\n",
       "      <td>9.926537e+05</td>\n",
       "      <td>152903.6306</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>11223</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              address           bbl        bin  block_id  boro_ct  borocode  \\\n",
       "0   108-005 70 AVENUE  4.022210e+09  4052307.0    348711  4073900         4   \n",
       "1    147-074 7 AVENUE  4.044750e+09  4101931.0    315986  4097300         4   \n",
       "2   390 MORGAN AVENUE  3.028870e+09  3338310.0    218365  3044900         3   \n",
       "3   1027 GRAND STREET  3.029250e+09  3338342.0    217969  3044900         3   \n",
       "4        603 6 STREET  3.010850e+09  3025654.0    223043  3016500         3   \n",
       "5   8 COLUMBUS AVENUE  1.011310e+09  1076229.0    106099  1014500         1   \n",
       "6  120 WEST 60 STREET  1.011310e+09  1076229.0    106099  1014500         1   \n",
       "7  311 WEST 50 STREET  1.010410e+09  1086093.0    103940  1012700         1   \n",
       "8    65 JEROME AVENUE           NaN        NaN    407443  5006400         5   \n",
       "9        638 AVENUE Z  3.072350e+09  3320727.0    207508  3037402         3   \n",
       "\n",
       "        boroname brch_light brch_other brch_shoe  ...  tree_dbh  tree_id  \\\n",
       "0         Queens         No         No        No  ...         3   180683   \n",
       "1         Queens         No         No        No  ...        21   200540   \n",
       "2       Brooklyn         No         No        No  ...         3   204026   \n",
       "3       Brooklyn         No         No        No  ...        10   204337   \n",
       "4       Brooklyn         No         No        No  ...        21   189565   \n",
       "5      Manhattan         No         No        No  ...        11   190422   \n",
       "6      Manhattan         No         No        No  ...        11   190426   \n",
       "7      Manhattan         No         No        No  ...         9   208649   \n",
       "8  Staten Island         No         No        No  ...         6   209610   \n",
       "9       Brooklyn         No         No        No  ...        21   192755   \n",
       "\n",
       "   trnk_light  trnk_other trunk_wire         user_type          x_sp  \\\n",
       "0          No          No         No  TreesCount Staff  1.027431e+06   \n",
       "1          No          No         No  TreesCount Staff  1.034456e+06   \n",
       "2          No          No         No         Volunteer  1.001823e+06   \n",
       "3          No          No         No         Volunteer  1.002420e+06   \n",
       "4          No          No         No         Volunteer  9.909138e+05   \n",
       "5          No          No         No         Volunteer  9.884187e+05   \n",
       "6          No          No         No         Volunteer  9.883112e+05   \n",
       "7          No          No         No         Volunteer  9.877691e+05   \n",
       "8          No          No         No  TreesCount Staff  9.630732e+05   \n",
       "9          No          No         No  TreesCount Staff  9.926537e+05   \n",
       "\n",
       "          y_sp       zip_city  zipcode  \n",
       "0  202756.7687   Forest Hills    11375  \n",
       "1  228644.8374     Whitestone    11357  \n",
       "2  200716.8913       Brooklyn    11211  \n",
       "3  199244.2531       Brooklyn    11211  \n",
       "4  182202.4260       Brooklyn    11215  \n",
       "5  219825.5227       New York    10023  \n",
       "6  219885.2785       New York    10023  \n",
       "7  217157.8561       New York    10019  \n",
       "8  156635.5542  Staten Island    10305  \n",
       "9  152903.6306       Brooklyn    11223  \n",
       "\n",
       "[10 rows x 45 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "url = 'https://data.cityofnewyork.us/resource/nwxe-4ae8.json'\n",
    "trees = pd.read_json(url)\n",
    "trees.head(10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Looks good, but lets take a look at the shape of this data:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1000, 45)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "trees.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1000 seems like too few trees for a city like New York, and a suspiciously round number. What's going on?\n",
    "\n",
    "Socrata places a 1000 row limit on their API. Raw data is meant to be \"paged\" through for applications, with the expectation that a UX wouldn't be able to handle a full dataset. \n",
    "\n",
    "As a simple example, if we had a mobile app with limited space that only displayed trees 5 at a time, we could view the first 5 trees in the dataset with the url below:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>address</th>\n",
       "      <th>bbl</th>\n",
       "      <th>bin</th>\n",
       "      <th>block_id</th>\n",
       "      <th>boro_ct</th>\n",
       "      <th>borocode</th>\n",
       "      <th>boroname</th>\n",
       "      <th>brch_light</th>\n",
       "      <th>brch_other</th>\n",
       "      <th>brch_shoe</th>\n",
       "      <th>...</th>\n",
       "      <th>tree_dbh</th>\n",
       "      <th>tree_id</th>\n",
       "      <th>trnk_light</th>\n",
       "      <th>trnk_other</th>\n",
       "      <th>trunk_wire</th>\n",
       "      <th>user_type</th>\n",
       "      <th>x_sp</th>\n",
       "      <th>y_sp</th>\n",
       "      <th>zip_city</th>\n",
       "      <th>zipcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>108-005 70 AVENUE</td>\n",
       "      <td>4022210001</td>\n",
       "      <td>4052307</td>\n",
       "      <td>348711</td>\n",
       "      <td>4073900</td>\n",
       "      <td>4</td>\n",
       "      <td>Queens</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>180683</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>TreesCount Staff</td>\n",
       "      <td>1027431.148</td>\n",
       "      <td>202756.7687</td>\n",
       "      <td>Forest Hills</td>\n",
       "      <td>11375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>147-074 7 AVENUE</td>\n",
       "      <td>4044750045</td>\n",
       "      <td>4101931</td>\n",
       "      <td>315986</td>\n",
       "      <td>4097300</td>\n",
       "      <td>4</td>\n",
       "      <td>Queens</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>200540</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>TreesCount Staff</td>\n",
       "      <td>1034455.701</td>\n",
       "      <td>228644.8374</td>\n",
       "      <td>Whitestone</td>\n",
       "      <td>11357</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>390 MORGAN AVENUE</td>\n",
       "      <td>3028870001</td>\n",
       "      <td>3338310</td>\n",
       "      <td>218365</td>\n",
       "      <td>3044900</td>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>3</td>\n",
       "      <td>204026</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>1001822.831</td>\n",
       "      <td>200716.8913</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>11211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1027 GRAND STREET</td>\n",
       "      <td>3029250001</td>\n",
       "      <td>3338342</td>\n",
       "      <td>217969</td>\n",
       "      <td>3044900</td>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>204337</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>1002420.358</td>\n",
       "      <td>199244.2531</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>11211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>603 6 STREET</td>\n",
       "      <td>3010850052</td>\n",
       "      <td>3025654</td>\n",
       "      <td>223043</td>\n",
       "      <td>3016500</td>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>189565</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>990913.775</td>\n",
       "      <td>182202.4260</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>11215</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "             address         bbl      bin  block_id  boro_ct  borocode  \\\n",
       "0  108-005 70 AVENUE  4022210001  4052307    348711  4073900         4   \n",
       "1   147-074 7 AVENUE  4044750045  4101931    315986  4097300         4   \n",
       "2  390 MORGAN AVENUE  3028870001  3338310    218365  3044900         3   \n",
       "3  1027 GRAND STREET  3029250001  3338342    217969  3044900         3   \n",
       "4       603 6 STREET  3010850052  3025654    223043  3016500         3   \n",
       "\n",
       "   boroname brch_light brch_other brch_shoe  ...  tree_dbh  tree_id  \\\n",
       "0    Queens         No         No        No  ...         3   180683   \n",
       "1    Queens         No         No        No  ...        21   200540   \n",
       "2  Brooklyn         No         No        No  ...         3   204026   \n",
       "3  Brooklyn         No         No        No  ...        10   204337   \n",
       "4  Brooklyn         No         No        No  ...        21   189565   \n",
       "\n",
       "   trnk_light  trnk_other trunk_wire         user_type         x_sp  \\\n",
       "0          No          No         No  TreesCount Staff  1027431.148   \n",
       "1          No          No         No  TreesCount Staff  1034455.701   \n",
       "2          No          No         No         Volunteer  1001822.831   \n",
       "3          No          No         No         Volunteer  1002420.358   \n",
       "4          No          No         No         Volunteer   990913.775   \n",
       "\n",
       "          y_sp      zip_city  zipcode  \n",
       "0  202756.7687  Forest Hills    11375  \n",
       "1  228644.8374    Whitestone    11357  \n",
       "2  200716.8913      Brooklyn    11211  \n",
       "3  199244.2531      Brooklyn    11211  \n",
       "4  182202.4260      Brooklyn    11215  \n",
       "\n",
       "[5 rows x 45 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "firstfive_url = 'https://data.cityofnewyork.us/resource/nwxe-4ae8.json?$limit=5&$offset=0'\n",
    "firstfive_trees = pd.read_json(firstfive_url)\n",
    "firstfive_trees"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we wanted the next 5, we would use this url:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>address</th>\n",
       "      <th>bbl</th>\n",
       "      <th>bin</th>\n",
       "      <th>block_id</th>\n",
       "      <th>boro_ct</th>\n",
       "      <th>borocode</th>\n",
       "      <th>boroname</th>\n",
       "      <th>brch_light</th>\n",
       "      <th>brch_other</th>\n",
       "      <th>brch_shoe</th>\n",
       "      <th>...</th>\n",
       "      <th>tree_dbh</th>\n",
       "      <th>tree_id</th>\n",
       "      <th>trnk_light</th>\n",
       "      <th>trnk_other</th>\n",
       "      <th>trunk_wire</th>\n",
       "      <th>user_type</th>\n",
       "      <th>x_sp</th>\n",
       "      <th>y_sp</th>\n",
       "      <th>zip_city</th>\n",
       "      <th>zipcode</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8 COLUMBUS AVENUE</td>\n",
       "      <td>1.011310e+09</td>\n",
       "      <td>1076229.0</td>\n",
       "      <td>106099</td>\n",
       "      <td>1014500</td>\n",
       "      <td>1</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>11</td>\n",
       "      <td>190422</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>988418.6997</td>\n",
       "      <td>219825.5227</td>\n",
       "      <td>New York</td>\n",
       "      <td>10023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>120 WEST 60 STREET</td>\n",
       "      <td>1.011310e+09</td>\n",
       "      <td>1076229.0</td>\n",
       "      <td>106099</td>\n",
       "      <td>1014500</td>\n",
       "      <td>1</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>11</td>\n",
       "      <td>190426</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>988311.1900</td>\n",
       "      <td>219885.2785</td>\n",
       "      <td>New York</td>\n",
       "      <td>10023</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>311 WEST 50 STREET</td>\n",
       "      <td>1.010410e+09</td>\n",
       "      <td>1086093.0</td>\n",
       "      <td>103940</td>\n",
       "      <td>1012700</td>\n",
       "      <td>1</td>\n",
       "      <td>Manhattan</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>208649</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>Volunteer</td>\n",
       "      <td>987769.1163</td>\n",
       "      <td>217157.8561</td>\n",
       "      <td>New York</td>\n",
       "      <td>10019</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>65 JEROME AVENUE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>407443</td>\n",
       "      <td>5006400</td>\n",
       "      <td>5</td>\n",
       "      <td>Staten Island</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>209610</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>TreesCount Staff</td>\n",
       "      <td>963073.1998</td>\n",
       "      <td>156635.5542</td>\n",
       "      <td>Staten Island</td>\n",
       "      <td>10305</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>638 AVENUE Z</td>\n",
       "      <td>3.072350e+09</td>\n",
       "      <td>3320727.0</td>\n",
       "      <td>207508</td>\n",
       "      <td>3037402</td>\n",
       "      <td>3</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>...</td>\n",
       "      <td>21</td>\n",
       "      <td>192755</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>No</td>\n",
       "      <td>TreesCount Staff</td>\n",
       "      <td>992653.7253</td>\n",
       "      <td>152903.6306</td>\n",
       "      <td>Brooklyn</td>\n",
       "      <td>11223</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 45 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              address           bbl        bin  block_id  boro_ct  borocode  \\\n",
       "0   8 COLUMBUS AVENUE  1.011310e+09  1076229.0    106099  1014500         1   \n",
       "1  120 WEST 60 STREET  1.011310e+09  1076229.0    106099  1014500         1   \n",
       "2  311 WEST 50 STREET  1.010410e+09  1086093.0    103940  1012700         1   \n",
       "3    65 JEROME AVENUE           NaN        NaN    407443  5006400         5   \n",
       "4        638 AVENUE Z  3.072350e+09  3320727.0    207508  3037402         3   \n",
       "\n",
       "        boroname brch_light brch_other brch_shoe  ...  tree_dbh  tree_id  \\\n",
       "0      Manhattan         No         No        No  ...        11   190422   \n",
       "1      Manhattan         No         No        No  ...        11   190426   \n",
       "2      Manhattan         No         No        No  ...         9   208649   \n",
       "3  Staten Island         No         No        No  ...         6   209610   \n",
       "4       Brooklyn         No         No        No  ...        21   192755   \n",
       "\n",
       "   trnk_light  trnk_other trunk_wire         user_type         x_sp  \\\n",
       "0          No          No         No         Volunteer  988418.6997   \n",
       "1          No          No         No         Volunteer  988311.1900   \n",
       "2          No          No         No         Volunteer  987769.1163   \n",
       "3          No          No         No  TreesCount Staff  963073.1998   \n",
       "4          No          No         No  TreesCount Staff  992653.7253   \n",
       "\n",
       "          y_sp       zip_city  zipcode  \n",
       "0  219825.5227       New York    10023  \n",
       "1  219885.2785       New York    10023  \n",
       "2  217157.8561       New York    10019  \n",
       "3  156635.5542  Staten Island    10305  \n",
       "4  152903.6306       Brooklyn    11223  \n",
       "\n",
       "[5 rows x 45 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nextfive_url = 'https://data.cityofnewyork.us/resource/nwxe-4ae8.json?$limit=5&$offset=5'\n",
    "nextfive_trees = pd.read_json(nextfive_url)\n",
    "nextfive_trees"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can read more about paging using the Socrata API [here](https://dev.socrata.com/docs/paging.html)\n",
    "\n",
    "In these docs, you'll also see more advanced functions (called `SoQL`) under the \"filtering and query\" section. These functions should be reminding you of SQL.\n",
    "\n",
    "Think about the shape you want your data to be in before querying it. Using `SoQL` is a good way to avoid the limits of the API. For example, using the below query I can easily obtain the count of each species of tree in the Bronx:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>count_tree_id</th>\n",
       "      <th>spc_common</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4619</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>662</td>\n",
       "      <td>silver maple</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>18</td>\n",
       "      <td>pagoda dogwood</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3917</td>\n",
       "      <td>littleleaf linden</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>12</td>\n",
       "      <td>American larch</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>1483</td>\n",
       "      <td>northern red oak</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1889</td>\n",
       "      <td>green ash</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>7</td>\n",
       "      <td>pignut hickory</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>56</td>\n",
       "      <td>eastern cottonwood</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>177</td>\n",
       "      <td>shingle oak</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>26</td>\n",
       "      <td>two-winged silverbell</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>41</td>\n",
       "      <td>kousa dogwood</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>7</td>\n",
       "      <td>bigtooth aspen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>158</td>\n",
       "      <td>eastern redcedar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>102</td>\n",
       "      <td>horse chestnut</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>11</td>\n",
       "      <td>holly</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>26</td>\n",
       "      <td>arborvitae</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>195</td>\n",
       "      <td>crimson king maple</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>354</td>\n",
       "      <td>black locust</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>54</td>\n",
       "      <td>Turkish hazelnut</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>904</td>\n",
       "      <td>sweetgum</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>2555</td>\n",
       "      <td>Sophora</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>5</td>\n",
       "      <td>quaking aspen</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>62</td>\n",
       "      <td>tulip-poplar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>133</td>\n",
       "      <td>catalpa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>579</td>\n",
       "      <td>Japanese tree lilac</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>85</td>\n",
       "      <td>bald cypress</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>31</td>\n",
       "      <td>American beech</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>45</td>\n",
       "      <td>crepe myrtle</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>74</td>\n",
       "      <td>Japanese hornbeam</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>295</td>\n",
       "      <td>American hornbeam</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>104</th>\n",
       "      <td>64</td>\n",
       "      <td>black cherry</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>105</th>\n",
       "      <td>32</td>\n",
       "      <td>Amur cork tree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>35</td>\n",
       "      <td>paperbark maple</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>80</td>\n",
       "      <td>bur oak</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>1</td>\n",
       "      <td>Virginia pine</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>55</td>\n",
       "      <td>Japanese snowbell</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>507</td>\n",
       "      <td>crab apple</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>43</td>\n",
       "      <td>tartar maple</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>11</td>\n",
       "      <td>southern red oak</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>62</td>\n",
       "      <td>magnolia</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>31</td>\n",
       "      <td>Chinese fringetree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>3</td>\n",
       "      <td>Osage-orange</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>116</th>\n",
       "      <td>472</td>\n",
       "      <td>hawthorn</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>117</th>\n",
       "      <td>174</td>\n",
       "      <td>white ash</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>118</th>\n",
       "      <td>150</td>\n",
       "      <td>flowering dogwood</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>1</td>\n",
       "      <td>Himalayan cedar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>120</th>\n",
       "      <td>14</td>\n",
       "      <td>European beech</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>121</th>\n",
       "      <td>27</td>\n",
       "      <td>weeping willow</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>6</td>\n",
       "      <td>Atlas cedar</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>17</td>\n",
       "      <td>boxelder</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>7511</td>\n",
       "      <td>London planetree</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>10</td>\n",
       "      <td>red pine</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>1321</td>\n",
       "      <td>Chinese elm</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>127</th>\n",
       "      <td>29</td>\n",
       "      <td>Persian ironwood</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>128</th>\n",
       "      <td>362</td>\n",
       "      <td>sugar maple</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>129</th>\n",
       "      <td>170</td>\n",
       "      <td>Cornelian cherry</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>130</th>\n",
       "      <td>203</td>\n",
       "      <td>white oak</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>131</th>\n",
       "      <td>88</td>\n",
       "      <td>Kentucky yellowwood</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>6</td>\n",
       "      <td>European alder</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>133 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     count_tree_id             spc_common\n",
       "0             4619                    NaN\n",
       "1              662           silver maple\n",
       "2               18         pagoda dogwood\n",
       "3             3917      littleleaf linden\n",
       "4               12         American larch\n",
       "5             1483       northern red oak\n",
       "6             1889              green ash\n",
       "7                7         pignut hickory\n",
       "8               56     eastern cottonwood\n",
       "9              177            shingle oak\n",
       "10              26  two-winged silverbell\n",
       "11              41          kousa dogwood\n",
       "12               7         bigtooth aspen\n",
       "13             158       eastern redcedar\n",
       "14             102         horse chestnut\n",
       "15              11                  holly\n",
       "16              26             arborvitae\n",
       "17             195     crimson king maple\n",
       "18             354           black locust\n",
       "19              54       Turkish hazelnut\n",
       "20             904               sweetgum\n",
       "21            2555                Sophora\n",
       "22               5          quaking aspen\n",
       "23              62           tulip-poplar\n",
       "24             133                catalpa\n",
       "25             579    Japanese tree lilac\n",
       "26              85           bald cypress\n",
       "27              31         American beech\n",
       "28              45           crepe myrtle\n",
       "29              74      Japanese hornbeam\n",
       "..             ...                    ...\n",
       "103            295      American hornbeam\n",
       "104             64           black cherry\n",
       "105             32         Amur cork tree\n",
       "106             35        paperbark maple\n",
       "107             80                bur oak\n",
       "108              1          Virginia pine\n",
       "109             55      Japanese snowbell\n",
       "110            507             crab apple\n",
       "111             43           tartar maple\n",
       "112             11       southern red oak\n",
       "113             62               magnolia\n",
       "114             31     Chinese fringetree\n",
       "115              3           Osage-orange\n",
       "116            472               hawthorn\n",
       "117            174              white ash\n",
       "118            150      flowering dogwood\n",
       "119              1        Himalayan cedar\n",
       "120             14         European beech\n",
       "121             27         weeping willow\n",
       "122              6            Atlas cedar\n",
       "123             17               boxelder\n",
       "124           7511       London planetree\n",
       "125             10               red pine\n",
       "126           1321            Chinese elm\n",
       "127             29       Persian ironwood\n",
       "128            362            sugar maple\n",
       "129            170       Cornelian cherry\n",
       "130            203              white oak\n",
       "131             88    Kentucky yellowwood\n",
       "132              6         European alder\n",
       "\n",
       "[133 rows x 2 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "boro = 'Bronx'\n",
    "soql_url = ('https://data.cityofnewyork.us/resource/nwxe-4ae8.json?' +\\\n",
    "        '$select=spc_common,count(tree_id)' +\\\n",
    "        '&$where=boroname=\\'Bronx\\'' +\\\n",
    "        '&$group=spc_common').replace(' ', '%20')\n",
    "soql_trees = pd.read_json(soql_url)\n",
    "\n",
    "soql_trees"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This behavior is very common with web APIs, and I think this is useful when thinking about building interactive data products. When in a Jupyter Notebook or RStudio, there's an expectation that (unless you're dealing with truly large datasets) the data you want can be brought in memory and manipulated.\n",
    "\n",
    "Dash and Shiny abstract away the need to distinguish between client side and server side to make web development more accessible to data scientists. This can lead to some unintentional design mistakes if you don't think about how costly your callback functions are (for example: nothing will stop you in dash from running a costly model triggered whenever a dropdown is called.)\n",
    "\n",
    "The goal of using the Socrata is to force you to think about where your data operations are happening, and not resort to pulling in the data and performing all operations in local memory.\n",
    "\n",
    "----------\n",
    "\n",
    "**NOTE**: One tip in dealing with URLs: you may need to replace spaces with `'%20'`. I personally just write out the url and then follow the string with a replace:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'https://api-url.com/?query%20with%20spaces'"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'https://api-url.com/?query with spaces'.replace(' ', '%20')"
   ]
  },
  {
   "cell_type": "code",
   #"execution_count": 'null',
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "conda-base",
   "language": "python",
   "name": "conda-base"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
